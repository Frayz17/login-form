{"version":3,"sources":["components/termsOfUse/styles.js","components/termsOfUse/TermsOfUse.js","features/auth/login/loginForm/styles.js","features/auth/login/loginForm/LoginForm.js","features/auth/login/styles.js","features/auth/login/Login.js","app/App.js","serviceWorker.js","index.js","assets/images/background.jpg","assets/images/background@2x.jpg"],"names":["useStyles","makeStyles","caption","fontSize","color","TermsOfUse","classes","Typography","className","align","form","display","width","flexDirection","alignItems","input","marginBotton","params","marginTop","marginBottom","fontFamily","justifyContent","rememberMeWrapper","checkboxLabel","forgotPassword","textTransform","submit","height","borderRadius","error","minHeight","validationSchema","Yup","username","min","max","required","password","Login","styles","initialValues","onSubmit","values","actions","setTimeout","alert","JSON","stringify","setSubmitting","handleSubmit","handleChange","handleBlur","TextField","variant","margin","name","type","fullWidth","onChange","onBlur","value","placeholder","Box","FormControlLabel","control","Checkbox","label","Button","theme","root","actionPanel","paddingBottom","image","backgroundRepeat","backgroundSize","backgroundPosition","breakpoints","up","backgroundImage","down","smallImage","paddingTop","fontWeight","textAlign","Grid","container","component","item","sm","md","xs","elevation","header","title","titleCart","role","LoginForm","App","CssBaseline","Boolean","window","location","hostname","match","globalTheme","createMuiTheme","typography","join","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.78fb7335.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(() => ({\n  caption: {\n    fontSize: 11,\n    color: '#43425d',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\nconst TermsOfUse = () => {\n  const classes = useStyles();\n\n  return (\n    <Typography className={classes.caption} align=\"center\">\n      Term of use. Privacy policy\n    </Typography>\n  );\n};\n\nexport default TermsOfUse;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  form: {\n    display: 'flex',\n    width: 400,\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  input: {\n    fontSize: 15,\n    marginBotton: 50,\n  },\n  params: {\n    marginTop: 20,\n    marginBottom: 100,\n    color: '#43425d',\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: 400,\n  },\n  rememberMeWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  checkboxLabel: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n  },\n  forgotPassword: {\n    color: '#43425d',\n    fontFamily: 'Poppins',\n    textTransform: 'none',\n  },\n  submit: {\n    marginBottom: 65,\n    width: 268,\n    height: 56,\n    borderRadius: 40,\n  },\n  error: {\n    color: 'red',\n    minHeight: 20,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styles from './styles';\n\nconst validationSchema = Yup.object({\n  username: Yup.string()\n    .min(3)\n    .max(15)\n    .required(),\n  password: Yup.string()\n    .min(8)\n    .max(60)\n    .required(),\n});\n\nconst Login = () => {\n  const classes = styles();\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          actions.setSubmitting(false);\n        }, 1000);\n      }}\n    >\n      {({\n        values, handleSubmit, handleChange, handleBlur,\n      }) => (\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"standard\"\n            margin=\"normal\"\n            name=\"username\"\n            type=\"text\"\n            fullWidth\n            className={classes.input}\n\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.name}\n            placeholder=\"Username\"\n          />\n          <div className={classes.error}>\n            <ErrorMessage name=\"username\" />\n          </div>\n\n          <TextField\n            variant=\"standard\"\n            margin=\"normal\"\n            name=\"password\"\n            fullWidth\n            className={classes.input}\n\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n            placeholder=\"Password\"\n          />\n          <div className={classes.error}>\n            <ErrorMessage name=\"password\" />\n          </div>\n\n          <Box className={classes.params}>\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label={<Typography className={classes.checkboxLabel}>Remember Me</Typography>}\n            />\n            <Button className={classes.forgotPassword}>Forgot Password</Button>\n          </Box>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\n\nexport default Login;\n","import { makeStyles } from '@material-ui/core/styles';\nimport smallImage from 'assets/images/background.jpg';\nimport image from 'assets/images/background@2x.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n  },\n  actionPanel: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    paddingBottom: 20,\n  },\n  image: {\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n\n  [theme.breakpoints.up('md')]: {\n    image: {\n      backgroundImage: `url(${image})`,\n    },\n  },\n  [theme.breakpoints.down('md')]: {\n    image: {\n      backgroundImage: `url(${smallImage})`,\n    },\n  },\n\n  header: {\n    paddingTop: '10rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    fontFamily: 'Poppins',\n    color: '#43425d',\n  },\n  title: {\n    width: 235,\n    fontSize: 36,\n    fontWeight: 300,\n    textTransform: 'uppercase',\n    margin: 0,\n  },\n  titleCart: {\n    color: '#5fa01b',\n    fontWeight: 800,\n  },\n  role: {\n    marginTop: 20,\n    marginBottom: 65,\n    color: '#A6A7AD',\n    fontSize: 18,\n    fontWeight: 400,\n    textAlign: 'center',\n  },\n\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TermsOfUse from 'components/termsOfUse';\nimport LoginForm from './loginForm/LoginForm';\nimport useStyles from './styles';\n\nconst Login = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n\n      <Grid item sm={false} md={6} className={classes.image} />\n\n      <Grid className={classes.actionPanel} item xs={12} sm={12} md={6} elevation={6}>\n        <Box className={classes.header}>\n          <Box>\n            <h2 className={classes.title}>\n              <span className={classes.titleCart}>Cart</span>\n              &Order\n            </h2>\n            <Box className={classes.role}>Admin</Box>\n          </Box>\n\n          <LoginForm />\n        </Box>\n\n        <Box>\n          <TermsOfUse />\n        </Box>\n      </Grid>\n\n    </Grid>\n  );\n};\n\n\nexport default Login;\n","import React from 'react';\nimport Login from 'features/auth/login';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Login />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'app/';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport * as serviceWorker from './serviceWorker';\n\nconst globalTheme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Poppins',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n  },\n  palette: {\n    primary: {\n      main: '#5fa01b',\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={globalTheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.20c11024.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background@2x.419119ec.jpg\";"],"sourceRoot":""}